// <auto-generated />
using System;
using Aula_api_fuel_manager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aula_api_fuel_manager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240910143907_M-03")]
    partial class M03
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Aula_api_fuel_manager.Models.Estabelecimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estabelecimentos");
                });

            modelBuilder.Entity("Aula_api_fuel_manager.Models.EstabelecimentoUsuarios", b =>
                {
                    b.Property<int>("EstabelecimentoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("EstabelecimentoId1")
                        .HasColumnType("int");

                    b.HasKey("EstabelecimentoId", "UsuarioId");

                    b.HasIndex("EstabelecimentoId1");

                    b.ToTable("EstabelecimentoUsuario");
                });

            modelBuilder.Entity("Aula_api_fuel_manager.Models.LinkDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EstabelecimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metodo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstabelecimentoId");

                    b.HasIndex("ServicoId");

                    b.ToTable("LinkDto");
                });

            modelBuilder.Entity("Aula_api_fuel_manager.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EstabelecimentoId")
                        .HasColumnType("int");

                    b.Property<int>("EstablecimentoId")
                        .HasColumnType("int");

                    b.Property<string>("NomeServico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstabelecimentoId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("Aula_api_fuel_manager.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Aula_api_fuel_manager.Models.EstabelecimentoUsuarios", b =>
                {
                    b.HasOne("Aula_api_fuel_manager.Models.Usuario", "Usuario")
                        .WithMany("Estabelecimentos")
                        .HasForeignKey("EstabelecimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aula_api_fuel_manager.Models.Estabelecimento", "Estabelecimento")
                        .WithMany()
                        .HasForeignKey("EstabelecimentoId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estabelecimento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Aula_api_fuel_manager.Models.LinkDto", b =>
                {
                    b.HasOne("Aula_api_fuel_manager.Models.Estabelecimento", null)
                        .WithMany("Links")
                        .HasForeignKey("EstabelecimentoId");

                    b.HasOne("Aula_api_fuel_manager.Models.Servico", null)
                        .WithMany("Links")
                        .HasForeignKey("ServicoId");
                });

            modelBuilder.Entity("Aula_api_fuel_manager.Models.Servico", b =>
                {
                    b.HasOne("Aula_api_fuel_manager.Models.Estabelecimento", "Estabelecimento")
                        .WithMany("Servicos")
                        .HasForeignKey("EstabelecimentoId");

                    b.Navigation("Estabelecimento");
                });

            modelBuilder.Entity("Aula_api_fuel_manager.Models.Estabelecimento", b =>
                {
                    b.Navigation("Links");

                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("Aula_api_fuel_manager.Models.Servico", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("Aula_api_fuel_manager.Models.Usuario", b =>
                {
                    b.Navigation("Estabelecimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
